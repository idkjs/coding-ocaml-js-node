;;;;{BSB GENERATED: NO EDIT
(subdir ./node_modules/bs-moment/src
(rule
(targets  MomentRe.ast)
 (deps (:inputs  MomentRe.re) )
(action
 (run bsc  -w a -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  MomentRe.cmj MomentRe.cmi MomentRe.cmt MomentRe.bs.js)
 (deps (:inputs  MomentRe.ast)  (:ast_deps .././src/MomentRe.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/bs-moment -cwd ./src %{ast_deps}) (run bsc -bs-re-out -I .    -w a -bs-package-name bs-moment -bs-package-output commonjs:./src:.bs.js -o MomentRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  MomentRe.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))


(subdir ./node_modules/bs-moment(data_only_dirs .melange.eobjs))
(subdir ./node_modules/bs-moment/.melange.eobjs)

(subdir ./node_modules/ocaml-re/lib
(rule
(targets  re.ast)
 (deps (:inputs  re.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  re-OcamlRe.cmj re-OcamlRe.cmi re-OcamlRe.cmt re.bs.js)
 (deps (:inputs  re.ast)  (:ast_deps .././lib/re.ast ) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o re-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  fmt.ast)
 (deps (:inputs  fmt.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  fmt-OcamlRe.cmj fmt-OcamlRe.cmi fmt-OcamlRe.cmt fmt.bs.js)
 (deps (:inputs  fmt.ast)  (:ast_deps .././lib/fmt.ast ) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o fmt-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str.ast)
 (deps (:inputs  str.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str.iast)
 (deps (:inputs  str.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str-OcamlRe.cmi str-OcamlRe.cmti)
 (deps (:inputs  str.iast)  (:ast_deps .././lib/str.ast .././lib/str.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o str-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str-OcamlRe.cmj str-OcamlRe.cmt str.bs.js)
 (deps (:inputs  str.ast)  str-OcamlRe.cmi (:ast_deps .././lib/str.ast .././lib/str.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o str-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core.ast)
 (deps (:inputs  core.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core.iast)
 (deps (:inputs  core.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core-OcamlRe.cmi core-OcamlRe.cmti)
 (deps (:inputs  core.iast)  (:ast_deps .././lib/core.ast .././lib/core.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o core-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core-OcamlRe.cmj core-OcamlRe.cmt core.bs.js)
 (deps (:inputs  core.ast)  core-OcamlRe.cmi (:ast_deps .././lib/core.ast .././lib/core.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o core-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset.ast)
 (deps (:inputs  cset.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset.iast)
 (deps (:inputs  cset.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset-OcamlRe.cmi cset-OcamlRe.cmti)
 (deps (:inputs  cset.iast)  (:ast_deps .././lib/cset.ast .././lib/cset.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o cset-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset-OcamlRe.cmj cset-OcamlRe.cmt cset.bs.js)
 (deps (:inputs  cset.ast)  cset-OcamlRe.cmi (:ast_deps .././lib/cset.ast .././lib/cset.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o cset-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob.ast)
 (deps (:inputs  glob.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob.iast)
 (deps (:inputs  glob.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob-OcamlRe.cmi glob-OcamlRe.cmti)
 (deps (:inputs  glob.iast)  (:ast_deps .././lib/glob.ast .././lib/glob.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o glob-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob-OcamlRe.cmj glob-OcamlRe.cmt glob.bs.js)
 (deps (:inputs  glob.ast)  glob-OcamlRe.cmi (:ast_deps .././lib/glob.ast .././lib/glob.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o glob-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre.ast)
 (deps (:inputs  pcre.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre.iast)
 (deps (:inputs  pcre.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre-OcamlRe.cmi pcre-OcamlRe.cmti)
 (deps (:inputs  pcre.iast)  (:ast_deps .././lib/pcre.ast .././lib/pcre.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o pcre-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre-OcamlRe.cmj pcre-OcamlRe.cmt pcre.bs.js)
 (deps (:inputs  pcre.ast)  pcre-OcamlRe.cmi (:ast_deps .././lib/pcre.ast .././lib/pcre.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o pcre-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl.ast)
 (deps (:inputs  perl.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl.iast)
 (deps (:inputs  perl.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl-OcamlRe.cmi perl-OcamlRe.cmti)
 (deps (:inputs  perl.iast)  (:ast_deps .././lib/perl.ast .././lib/perl.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o perl-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl-OcamlRe.cmj perl-OcamlRe.cmt perl.bs.js)
 (deps (:inputs  perl.ast)  perl-OcamlRe.cmi (:ast_deps .././lib/perl.ast .././lib/perl.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o perl-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs.ast)
 (deps (:inputs  emacs.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs.iast)
 (deps (:inputs  emacs.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs-OcamlRe.cmi emacs-OcamlRe.cmti)
 (deps (:inputs  emacs.iast)  (:ast_deps .././lib/emacs.ast .././lib/emacs.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o emacs-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs-OcamlRe.cmj emacs-OcamlRe.cmt emacs.bs.js)
 (deps (:inputs  emacs.ast)  emacs-OcamlRe.cmi (:ast_deps .././lib/emacs.ast .././lib/emacs.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o emacs-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group.ast)
 (deps (:inputs  group.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group.iast)
 (deps (:inputs  group.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group-OcamlRe.cmi group-OcamlRe.cmti)
 (deps (:inputs  group.iast)  (:ast_deps .././lib/group.ast .././lib/group.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o group-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group-OcamlRe.cmj group-OcamlRe.cmt group.bs.js)
 (deps (:inputs  group.ast)  group-OcamlRe.cmi (:ast_deps .././lib/group.ast .././lib/group.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o group-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark.ast)
 (deps (:inputs  pmark.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark.iast)
 (deps (:inputs  pmark.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark-OcamlRe.cmi pmark-OcamlRe.cmti)
 (deps (:inputs  pmark.iast)  (:ast_deps .././lib/pmark.ast .././lib/pmark.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o pmark-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark-OcamlRe.cmj pmark-OcamlRe.cmt pmark.bs.js)
 (deps (:inputs  pmark.ast)  pmark-OcamlRe.cmi (:ast_deps .././lib/pmark.ast .././lib/pmark.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o pmark-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix.ast)
 (deps (:inputs  posix.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix.iast)
 (deps (:inputs  posix.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix-OcamlRe.cmi posix-OcamlRe.cmti)
 (deps (:inputs  posix.iast)  (:ast_deps .././lib/posix.ast .././lib/posix.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o posix-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix-OcamlRe.cmj posix-OcamlRe.cmt posix.bs.js)
 (deps (:inputs  posix.ast)  posix-OcamlRe.cmi (:ast_deps .././lib/posix.ast .././lib/posix.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o posix-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata.ast)
 (deps (:inputs  automata.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata.iast)
 (deps (:inputs  automata.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata-OcamlRe.cmi automata-OcamlRe.cmti)
 (deps (:inputs  automata.iast)  (:ast_deps .././lib/automata.ast .././lib/automata.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o automata-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata-OcamlRe.cmj automata-OcamlRe.cmt automata.bs.js)
 (deps (:inputs  automata.ast)  automata-OcamlRe.cmi (:ast_deps .././lib/automata.ast .././lib/automata.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o automata-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category.ast)
 (deps (:inputs  category.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category.iast)
 (deps (:inputs  category.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category-OcamlRe.cmi category-OcamlRe.cmti)
 (deps (:inputs  category.iast)  (:ast_deps .././lib/category.ast .././lib/category.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o category-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category-OcamlRe.cmj category-OcamlRe.cmt category.bs.js)
 (deps (:inputs  category.ast)  category-OcamlRe.cmi (:ast_deps .././lib/category.ast .././lib/category.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o category-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map.ast)
 (deps (:inputs  color_map.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map.iast)
 (deps (:inputs  color_map.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map-OcamlRe.cmi color_map-OcamlRe.cmti)
 (deps (:inputs  color_map.iast)  (:ast_deps .././lib/color_map.ast .././lib/color_map.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -I . -I ../.melange.eobjs   -w a -o color_map-OcamlRe.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map-OcamlRe.cmj color_map-OcamlRe.cmt color_map.bs.js)
 (deps (:inputs  color_map.ast)  color_map-OcamlRe.cmi (:ast_deps .././lib/color_map.ast .././lib/color_map.iast) ../bsconfig.json ../.melange.eobjs/OcamlRe.cmi)
(action
 (progn (dynamic-run bsb_helper -bs-ns OcamlRe -root /Users/mando/Github/coding-ocaml-js-node/hello-npm/node_modules/ocaml-re -cwd ./lib %{ast_deps}) (run bsc -bs-ns OcamlRe -bs-read-cmi -I . -I ../.melange.eobjs   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./lib:.bs.js -o color_map-OcamlRe.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  color_map.bs.js category.bs.js automata.bs.js posix.bs.js pmark.bs.js group.bs.js emacs.bs.js perl.bs.js pcre.bs.js glob.bs.js cset.bs.js core.bs.js str.bs.js fmt.bs.js re.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))

(subdir ./node_modules/ocaml-re/.melange.eobjs(rule
(targets  OcamlRe.cmi)
 (deps (:inputs  OcamlRe.mlmap) )
(action (run bsc -w -49 -color always -no-alias-deps %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 )
(subdir ./node_modules/ocaml-re(data_only_dirs .melange.eobjs))
(subdir ./node_modules/ocaml-re/.melange.eobjs)

(subdir .
(rule
(targets  Lib.ast)
 (deps (:inputs  Lib.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Lib.cmj Lib.cmi Lib.cmt Lib.bs.js)
 (deps (:inputs  Lib.ast)  (:ast_deps Lib.ast ) bsconfig.json(alias ./node_modules/bs-moment/src/bsb_world)(alias ./node_modules/ocaml-re/lib/bsb_world))
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/coding-ocaml-js-node/hello-npm -cwd . %{ast_deps}) (run bsc -bs-re-out -I . -I ./node_modules/bs-moment/src -I ./node_modules/ocaml-re/.melange.eobjs -I ./node_modules/ocaml-re/lib   -w a -bs-package-name coding-ocaml-js-node -bs-package-output commonjs:.:.bs.js -o Lib.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Hello.ast)
 (deps (:inputs  Hello.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Hello.cmj Hello.cmi Hello.cmt Hello.bs.js)
 (deps (:inputs  Hello.ast)  (:ast_deps Hello.ast ) bsconfig.json(alias ./node_modules/bs-moment/src/bsb_world)(alias ./node_modules/ocaml-re/lib/bsb_world))
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/coding-ocaml-js-node/hello-npm -cwd . %{ast_deps}) (run bsc -I . -I ./node_modules/bs-moment/src -I ./node_modules/ocaml-re/.melange.eobjs -I ./node_modules/ocaml-re/lib   -w a -bs-package-name coding-ocaml-js-node -bs-package-output commonjs:.:.bs.js -o Hello.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  HelloReason.ast)
 (deps (:inputs  HelloReason.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  HelloReason.cmj HelloReason.cmi HelloReason.cmt HelloReason.bs.js)
 (deps (:inputs  HelloReason.ast)  (:ast_deps HelloReason.ast ) bsconfig.json(alias ./node_modules/bs-moment/src/bsb_world)(alias ./node_modules/ocaml-re/lib/bsb_world))
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/coding-ocaml-js-node/hello-npm -cwd . %{ast_deps}) (run bsc -bs-re-out -I . -I ./node_modules/bs-moment/src -I ./node_modules/ocaml-re/.melange.eobjs -I ./node_modules/ocaml-re/lib   -w a -bs-package-name coding-ocaml-js-node -bs-package-output commonjs:.:.bs.js -o HelloReason.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  HelloRescript.ast)
 (deps (:inputs  HelloRescript.res) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  HelloRescript.cmj HelloRescript.cmi HelloRescript.cmt HelloRescript.bs.js)
 (deps (:inputs  HelloRescript.ast)  (:ast_deps HelloRescript.ast ) bsconfig.json(alias ./node_modules/bs-moment/src/bsb_world)(alias ./node_modules/ocaml-re/lib/bsb_world))
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/coding-ocaml-js-node/hello-npm -cwd . %{ast_deps}) (run bsc -I . -I ./node_modules/bs-moment/src -I ./node_modules/ocaml-re/.melange.eobjs -I ./node_modules/ocaml-re/lib   -w a -bs-package-name coding-ocaml-js-node -bs-package-output commonjs:.:.bs.js -o HelloRescript.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  HelloRescript.bs.js HelloReason.bs.js Hello.bs.js Lib.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))


(subdir .melange.eobjs)

(data_only_dirs node_modules .melange.eobjs)
(alias (name bsb_world))
;;;;BSB GENERATED: NO EDIT}
